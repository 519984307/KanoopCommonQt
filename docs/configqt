#!/bin/bash
#
# This script is to configure QT for PI cross-compile build environment which is used here
#
# It is meant to be run from a shadow directory at the
# same level as Src/
# For instance, I have /mnt/QtBuild/5.12.3/Src
#                                  /5.13.0/Src
# I put my shadow build directory at:
#                                  /5.13.0/Src/pibuild
# and run this script from there
#
# Note... fix symbolic links up with 'symlinks' (apt-get install symlinks)
# On the PI, go to each of these directories and run 'sudo symlinks -e .'
#   /usr/lib/arm-linux-gnueabihf
#   /etc/alternatives
#
QTVER=5.12.3
GCC_VERSION=4.8.3

# I have the pi mounted here with sshfs
SYSROOT=$HOME/mnt/raspi

# Where the programs we build will look for QT on the target
# When the build is complete
TARGET_LIBS=/usr/local/qt5pi/$QTVER

#----------------------------------------------------------------------------------------
# This is where all the stuff we build is going to end up
HOST_INSTALL=$HOME/raspi
# The Qt cross compile modules that we will configure the Qt version in Qt creator goes here
QTCREATOR_STUFF=$HOST_INSTALL/qt5hostprefix/$QTVER
# The binaries which we will copy on to the PI after we're done end up here
PI_STUFF=$HOST_INSTALL/qt5extprefix/$QTVER

if [ "$#" -ne 0 ]; then
	echo "Setting QT to $QTVER"
	QTVER=$1    
fi

if [ $GCC_VERSION == "6.3.0" ]; then
    # use newer cross tools
    CROSS=/opt/cross-pi-gcc-6.3.0/bin/arm-linux-gnueabihf-
else
    CROSS=$HOME/mnt/fasty/linaro/gcc-linaro-arm-linux-gnueabihf-4.8.3-raspbian-x64/bin/arm-linux-gnueabihf-
fi

if [[ $QTVER == *"5.1"* ]]; then
    DEVICE=linux-rasp-pi3-vc4-g++
else
    DEVICE=linux-rpi3-vc4-g++
fi

CONFIG="-release -opensource -opengl es2 -confirm-license -device $DEVICE \
    -device-option CROSS_COMPILE=$CROSS -sysroot $SYSROOT \
    -skip wayland \
    -prefix $TARGET_LIBS \
    -extprefix $PI_STUFF \
    -hostprefix $QTCREATOR_STUFF \
    -v -nomake examples -nomake tests -no-use-gold-linker"

echo "CONFIG is '$CONFIG'"
CONFIG_CMD=../Src/configure

$CONFIG_CMD $CONFIG
